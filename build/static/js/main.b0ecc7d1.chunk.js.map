{"version":3,"sources":["containers/Login/Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Login","className","type","placeholder","responseHandler","googleUser","id_token","getAuthResponse","googleId","getId","console","log","accessToken","clientConfig","client_id","preLogin","failureHandler","error","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4MA2CeA,EAvCD,WAsBF,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAIA,UAAU,kBAAd,mBACA,uBAAOA,UAAU,GAAGC,KAAK,OAAOC,YAAY,yBAC5C,uBAAOD,KAAK,WAAWC,YAAY,gBACnC,6CAEA,cAAC,oBAAD,CACIC,gBArBG,SAACC,GACpB,IAAMC,EAAWD,EAAWE,iBAAgB,GAAMD,SAC5CE,EAAWH,EAAWI,QAE5BC,QAAQC,IAAI,CAAEH,aACdE,QAAQC,IAAI,CAACC,YAAaN,KAiBVO,aAZC,CAAEC,UAAW,4EAadC,SA/BK,WACrBL,QAAQC,IAAI,gCA+BIK,eA7BC,SAACC,GAElBP,QAAQO,MAAMA,UCIPC,EATH,WAEV,OACE,qBAAKjB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHDQ,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,OAOJd,K","file":"static/js/main.b0ecc7d1.chunk.js","sourcesContent":["import React from \"react\";\nimport { GoogleLoginButton } from 'ts-react-google-login-component';\n\n\nconst Login = () => {\n    const preLoginTracking = () => {\n        console.log('Attemp to login with google');\n    }\n    const errorHandler = (error: string) => {\n        // handle error if login got failed...\n        console.error(error)\n    }\n\n    const responseGoogle = (googleUser: gapi.auth2.GoogleUser) => {\n        const id_token = googleUser.getAuthResponse(true).id_token\n        const googleId = googleUser.getId()\n\n        console.log({ googleId })\n        console.log({accessToken: id_token})\n        // Make user login in your system\n        // login success tracking...\n    }\n\n    const clientConfig = { client_id: '993513948523-anaep7s1tmm4n0db313bruanu26qehfr.apps.googleusercontent.com' }\n\n\n            return (\n                <div className=\"loginForm\">\n                    <h1 className=\"text-orange-600\">LOGIN</h1>\n                    <input className=\"\" type=\"text\" placeholder=\"Username or email...\"/>\n                    <input type=\"password\" placeholder=\"Password...\"/>\n                    <button>Sign in</button>\n\n                    <GoogleLoginButton\n                        responseHandler={responseGoogle}\n                        clientConfig={clientConfig}\n                        preLogin={preLoginTracking}\n                        failureHandler={errorHandler}\n                    />\n                </div>\n            );\n}\n\nexport default Login","import React from 'react';\nimport './index.css';\nimport './App.css';\nimport Login from \"./containers/Login/Login\";\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}