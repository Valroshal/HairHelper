{"ast":null,"code":"var _jsxFileName = \"/Users/innagro/WebstormProjects/HairHelper/src/containers/Login/Login.tsx\";\nimport React from \"react\";\nimport { GoogleLoginButton } from 'ts-react-google-login-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  const preLoginTracking = () => {\n    console.log('Attemp to login with google');\n  };\n\n  const errorHandler = error => {\n    // handle error if login got failed...\n    console.error(error);\n  };\n\n  const responseGoogle = googleUser => {\n    const id_token = googleUser.getAuthResponse(true).id_token;\n    const googleId = googleUser.getId();\n    console.log({\n      googleId\n    });\n    console.log({\n      accessToken: id_token\n    }); // Make user login in your system\n    // login success tracking...\n  };\n\n  const clientConfig = {\n    client_id: '993513948523-anaep7s1tmm4n0db313bruanu26qehfr.apps.googleusercontent.com'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"\",\n      type: \"text\",\n      placeholder: \"Username or email...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLoginButton, {\n      responseHandler: responseGoogle,\n      clientConfig: clientConfig,\n      preLogin: preLoginTracking,\n      failureHandler: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 17\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","GoogleLoginButton","Login","preLoginTracking","console","log","errorHandler","error","responseGoogle","googleUser","id_token","getAuthResponse","googleId","getId","accessToken","clientConfig","client_id"],"sources":["/Users/innagro/WebstormProjects/HairHelper/src/containers/Login/Login.tsx"],"sourcesContent":["import React from \"react\";\nimport { GoogleLoginButton } from 'ts-react-google-login-component';\n\n\nconst Login = () => {\n    const preLoginTracking = () => {\n        console.log('Attemp to login with google');\n    }\n    const errorHandler = (error: string) => {\n        // handle error if login got failed...\n        console.error(error)\n    }\n\n    const responseGoogle = (googleUser: gapi.auth2.GoogleUser) => {\n        const id_token = googleUser.getAuthResponse(true).id_token\n        const googleId = googleUser.getId()\n\n        console.log({ googleId })\n        console.log({accessToken: id_token})\n        // Make user login in your system\n        // login success tracking...\n    }\n\n    const clientConfig = { client_id: '993513948523-anaep7s1tmm4n0db313bruanu26qehfr.apps.googleusercontent.com' }\n\n\n            return (\n                <div className=\"loginForm\">\n                    <h1>LOGIN</h1>\n                    <input className=\"\" type=\"text\" placeholder=\"Username or email...\"/>\n                    <input type=\"password\" placeholder=\"Password...\"/>\n                    <button>Sign in</button>\n\n                    <GoogleLoginButton\n                        responseHandler={responseGoogle}\n                        clientConfig={clientConfig}\n                        preLogin={preLoginTracking}\n                        failureHandler={errorHandler}\n                    />\n                </div>\n            );\n}\n\nexport default Login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,iCAAlC;;;AAGA,MAAMC,KAAK,GAAG,MAAM;EAChB,MAAMC,gBAAgB,GAAG,MAAM;IAC3BC,OAAO,CAACC,GAAR,CAAY,6BAAZ;EACH,CAFD;;EAGA,MAAMC,YAAY,GAAIC,KAAD,IAAmB;IACpC;IACAH,OAAO,CAACG,KAAR,CAAcA,KAAd;EACH,CAHD;;EAKA,MAAMC,cAAc,GAAIC,UAAD,IAAuC;IAC1D,MAAMC,QAAQ,GAAGD,UAAU,CAACE,eAAX,CAA2B,IAA3B,EAAiCD,QAAlD;IACA,MAAME,QAAQ,GAAGH,UAAU,CAACI,KAAX,EAAjB;IAEAT,OAAO,CAACC,GAAR,CAAY;MAAEO;IAAF,CAAZ;IACAR,OAAO,CAACC,GAAR,CAAY;MAACS,WAAW,EAAEJ;IAAd,CAAZ,EAL0D,CAM1D;IACA;EACH,CARD;;EAUA,MAAMK,YAAY,GAAG;IAAEC,SAAS,EAAE;EAAb,CAArB;EAGQ,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAO,SAAS,EAAC,EAAjB;MAAoB,IAAI,EAAC,MAAzB;MAAgC,WAAW,EAAC;IAA5C;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAO,IAAI,EAAC,UAAZ;MAAuB,WAAW,EAAC;IAAnC;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,eAMI,QAAC,iBAAD;MACI,eAAe,EAAER,cADrB;MAEI,YAAY,EAAEO,YAFlB;MAGI,QAAQ,EAAEZ,gBAHd;MAII,cAAc,EAAEG;IAJpB;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeX,CArCD;;KAAMJ,K;AAuCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}